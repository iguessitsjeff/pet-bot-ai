AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Pet Bot AI Processing Lambda

Parameters:
  PetBotAppName:
    Type: String
    Default: "pet-bot-ai"
  ApplicationEnv:
    Type: String
    Default: "dev"
  S3Bucket:
    Type: String
  LexBotId:
    Type: String
  LexBotAliasId:
    Type: String

Resources:
  BasicAWSApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: Basic AWS Api Gateway
      StageName: Staging
      MethodSettings:
        - ResourcePath: /*
          HttpMethod: "*"
          ThrottlingBurstLimit: 10
          ThrottlingRateLimit: 10
      Auth:
        ApiKeyRequired: false # sets for all 
        UsagePlan:
            CreateUsagePlan: PER_API
            UsagePlanName: GatewayAuthorization
        
  # Define the processing Lambda function
  PetBotFunction:
    Type: AWS::Serverless::Function 
    Properties:
      FunctionName: !Sub ${PetBotAppName}-lambda
      Handler: src.lambda_function.lambda_handler
      Runtime: python3.12
      Timeout: 120
      MemorySize: 1024
      Environment:
        Variables:
          LOG_LEVEL: INFO
          POWERTOOLS_SERVICE_NAME: pet-bot-ai
          POWERTOOLS_LOG_LEVEL: INFO
          POWERTOOLS_LOGGER_SAMPLE_RATE: 0.1
          POWERTOOLS_LOGGER_LOG_EVENT: true
          APPLICATION_ENV: !Ref ApplicationEnv
      Policies:
      - AWSSecretsManagerGetSecretValuePolicy:
          SecretArn: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:petbotkeys-1ipW27" #gitleaks:allow
      - S3WritePolicy:
          BucketName: !Ref S3Bucket
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - lex:RecognizeUtterance
          - lex:RecognizeText
          - lex:StartConversation
          Resource:
          - !Sub arn:aws:lex:${AWS::Region}:${AWS::AccountId}:bot-alias/${LexBotId}/${LexBotAliasId}
      Events:
        TelegramWebhookEvent:
          Type: Api
          Properties:
            Path: /message
            Method: post
            RestApiId:
              Ref: BasicAWSApiGateway
        HealthEvent:
          Type: Api
          Properties:
            Path: /health
            Method: get
            RestApiId:
              Ref: BasicAWSApiGateway
Outputs:
  ApiGateway:
    Description: "The URL is:"
    Value: !Sub "https://${BasicAWSApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Staging/"
  ApiKey:
    Description: "You can find your API Key in the AWS console: (Put in the request HEADER as 'x-api-key')"
    Value: !Sub "https://console.aws.amazon.com/apigateway/home?region=${AWS::Region}#/api-keys/${BasicAWSApiGateway}"